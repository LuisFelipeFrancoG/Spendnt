@page "/recordatorios/edit/{Id:int}"
@attribute [Authorize]

@using Spendnt.Shared.Entities
@using Spendnt.WEB.Repositories
@using CurrieTechnologies.Razor.SweetAlert2
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService Swal

<h3>Editar Recordatorio de Gasto</h3>

@if (recordatorioModel == null && !loadFailed)
{
    <p><em>Cargando recordatorio...</em></p>
}
else if (loadFailed)
{
    <div class="alert alert-danger">No se pudo cargar el recordatorio para editar.</div>
}
else if (recordatorioModel != null)
{
    <RecordatorioForm Recordatorio="recordatorioModel" OnValidSubmit="Guardar" />
}

@code {
    [Parameter] public int Id { get; set; }
    private RecordatorioGasto? recordatorioModel;
    private bool loadFailed = false;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        loadFailed = false;
        try
        {
            var responseHttp = await repository.GetAsync<RecordatorioGasto>($"api/RecordatoriosGasto/{Id}");
            if (responseHttp.Error)
            {
                loadFailed = true;
                if (responseHttp.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
                {
                    navigationManager.NavigateTo("/recordatorios");
                }
                else
                {
                    await Swal.FireAsync("Error", await responseHttp.GetErrorMessageAsync(), SweetAlertIcon.Error);
                }
            }
            else
            {
                recordatorioModel = responseHttp.Response;
                if (recordatorioModel == null) loadFailed = true;
            }
        }
        catch (AccessTokenNotAvailableException exception)
        {
            loadFailed = true;
            exception.Redirect();
        }
        catch (Exception ex)
        {
            loadFailed = true;
            await Swal.FireAsync("Error", $"Error inesperado al cargar el recordatorio: {ex.Message}", SweetAlertIcon.Error);
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task Guardar()
    {
        if (recordatorioModel == null) return;
        var response = await repository.PutAsync($"/api/RecordatoriosGasto/{recordatorioModel.Id}", recordatorioModel);
        if (response.Error)
        {
            var mensaje = await response.GetErrorMessageAsync();
            await Swal.FireAsync("Error", $"No se pudo actualizar el recordatorio: {mensaje}", SweetAlertIcon.Error);
        }
        else
        {
            navigationManager.NavigateTo("/recordatorios");
        }
    }
}