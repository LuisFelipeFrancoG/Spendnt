@using CurrieTechnologies.Razor.SweetAlert2
@using Spendnt.Shared.Entities
@using Spendnt.WEB.Repositories

@page "/Ingresos/create"

@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService


<h3>IngresosCreate</h3>

<IngresosForm @ref="ingresosForm" Ingresos="Ingresos" OnSubmit="Create" ReturnAction="Return" Categorias="listaCategorias" />


@code {
    public Ingresos Ingresos = new();
    public IngresosForm ingresosForm;
    private List<Categoria> listaCategorias = new();

    protected override async Task OnInitializedAsync()
    {
        
        if (Ingresos.Fecha == DateTime.MinValue) 
        {
            Ingresos.Fecha = DateTime.Today;
        }
        await CargarCategorias();
    }

    private async Task CargarCategorias()
    {
        var responseHttp = await repository.GetAsync<List<Categoria>>("/api/Categorias");
        if (responseHttp.Error)
        {
            var mensaje = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", $"No se pudieron cargar las categorías: {mensaje}");
        }
        else
        {
            listaCategorias = responseHttp.Response;
        }
    }

    private async Task Create()
    {

        var responseHttp = await repository.PostAsync("/api/Ingresos", Ingresos);
        if (responseHttp.Error)
        {

            var mensaje = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", mensaje);
            return;


        }
        navigationManager.NavigateTo("/Ingresos");

    }



    private void Return(){

        navigationManager.NavigateTo("/Ingresos");



    }
}