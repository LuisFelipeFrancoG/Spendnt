@using Spendnt.Shared.Entities
@inject NavigationManager Navigation

<EditForm Model="Ingresos" OnSubmit="OnSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Ingreso</label>
        <div>
            <InputNumber class="form-control" @bind-Value="Ingresos.Ingreso" />
            <ValidationMessage For="@(() => Ingresos.Ingreso)" />
        </div>
    </div>

    <div class="mb-3">
        <label class="form-label">Fecha</label>
        <div>
            <InputDate class="form-control" @bind-Value="Ingresos.Fecha" />
            <ValidationMessage For="@(() => Ingresos.Fecha)" />
        </div>
    </div>


<div class="mb-3">
    <label class="form-label">Categoría</label>
    <div>
        <InputSelect class="form-control" @bind-Value="Ingresos.CategoriaId">
            <option value="">-- Seleccione una categoría --</option>
            @if (Categorias != null)
            {
                @foreach (var categoria in Categorias)
                {
                    <option value="@categoria.Id">@categoria.Nombre</option> 
                }
            }
        </InputSelect>
        <ValidationMessage For="@(() => Ingresos.CategoriaId)" />
    </div>
</div>

    <button class="btn btn-primary" type="submit">Guardar</button>
    <button class="btn btn-success" type="button" @onclick="ReturnAction">Regresar</button>
</EditForm>

@code {
    [EditorRequired]
    [Parameter]
    public Ingresos Ingresos { get; set; }

    [Parameter]
    public List<Categoria> Categorias { get; set; } = new();

    [EditorRequired]
    [Parameter]
    public EventCallback<EditContext> OnSubmit { get; set; }

    [EditorRequired]
    [Parameter]
    public EventCallback ReturnAction { get; set; }
}