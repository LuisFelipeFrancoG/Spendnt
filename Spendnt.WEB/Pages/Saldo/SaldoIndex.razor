@page "/Saldo"
@using Spendnt.Shared.Entities
@using Spendnt.WEB.Repositories
@using Microsoft.AspNetCore.Authorization 

@inject IRepository repository
@inject NavigationManager navigationManager


<h1>Saldo</h1>

@if (saldoActual == null && !errorAlCargar)
{
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Cargando saldo...</span>
    </div>
}
else if (errorAlCargar)
{
    <div class="alert alert-danger" role="alert">
        No se pudo cargar la información del saldo. Por favor, intente más tarde.
    </div>
}
else if (saldoActual != null)
{
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0"><i class="bi bi-wallet2"></i> Estado Actual del Saldo</h5>
        </div>
        <div class="card-body">
            <div class="row mb-2">
                <div class="col-md-4">
                    <p class="fw-bold fs-5">Total de Ingresos:</p>
                    <p class="text-success fs-4">@saldoActual.TotalIngresos.ToString("C")</p>
                </div>
                <div class="col-md-4">
                    <p class="fw-bold fs-5">Total de Egresos:</p>
                    <p class="text-danger fs-4">@saldoActual.TotalEgresos.ToString("C")</p>
                </div>
                <div class="col-md-4">
                    <p class="fw-bold fs-5">Saldo Disponible:</p>
                    <p class="text-primary fs-3"><strong>@saldoActual.TotalSaldoCalculado.ToString("C")</strong></p>
                </div>
            </div>
            @if (saldoActual.TotalSaldo != saldoActual.TotalSaldoCalculado)
            {
                <div class="alert alert-info mt-3" role="alert">
                    <i class="bi bi-info-circle-fill"></i> Se ha establecido un saldo manual de: <strong>@saldoActual.TotalSaldo.ToString("C")</strong>. El saldo calculado es @saldoActual.TotalSaldoCalculado.ToString("C").
                </div>
            }
        </div>
        <div class="card-footer text-muted">
            <small>Última actualización al cargar esta página.</small>
            <button class="btn btn-sm btn-outline-secondary float-end" @onclick="LoadSaldo"><i class="bi bi-arrow-clockwise"></i> Refrescar</button>
        </div>
    </div>
    <div>
        <br />
        <a href="/Saldo/edit/@saldoActual.Id" class="btn btn-warning"><i class="oi oi-pencil" /> Editar Saldo Manual</a>
    </div>
}
else
{
    <p>No hay información de saldo disponible o no se encontró un saldo principal.</p>
    <p>Asegúrate de que el SeedDB haya creado un saldo inicial y que la API funcione correctamente.</p>
}

@code {
    private Saldo saldoActual;
    private bool errorAlCargar = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadSaldo();
    }

    private async Task LoadSaldo()
    {
        saldoActual = null;
        errorAlCargar = false;

        var responseHttp = await repository.GetAsync<Saldo>("/api/Saldo/current");

        if (responseHttp.Error)
        {
            errorAlCargar = true;
            var mensajeError = await responseHttp.GetErrorMessageAsync();
            Console.WriteLine($"Error cargando saldo: {mensajeError}");
        }
        else
        {
            saldoActual = responseHttp.Response;
            if (saldoActual == null)
            {
                errorAlCargar = true; 
                Console.WriteLine("El saldo fue cargado como null desde la API a pesar de no haber error HTTP.");
            }
        }
        StateHasChanged(); 
    }
}