@using CurrieTechnologies.Razor.SweetAlert2
@using Spendnt.Shared.Entities
@using Spendnt.WEB.Repositories

@page "/Egresos/create"

@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService


<h3>EgresosCreate</h3>

<EgresosForm @ref="egresosForm" Egresos="Egresos" OnSubmit="Create" ReturnAction="Return" Categorias="listaCategorias" />


@code {
    public Egresos Egresos = new();
    public EgresosForm egresosForm;
    private List<Categoria> listaCategorias = new();

    protected override async Task OnInitializedAsync()
    {

        if (Egresos.Fecha == DateTime.MinValue)
        {
            Egresos.Fecha = DateTime.Today;
        }
        await CargarCategorias();
    }

    private async Task CargarCategorias()
    {
        var responseHttp = await repository.GetAsync<List<Categoria>>("/api/Categorias");
        if (responseHttp.Error)
        {
            var mensaje = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", $"No se pudieron cargar las categorías: {mensaje}");
        }
        else
        {
            listaCategorias = responseHttp.Response;
        }
    }

    private async Task Create()
    {

        var responseHttp = await repository.PostAsync("/api/Egresos", Egresos);
        if (responseHttp.Error)
        {

            var mensaje = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", mensaje);
            return;


        }
        navigationManager.NavigateTo("/Egresos");

    }



    private void Return(){

        navigationManager.NavigateTo("/Egresos");



    }
}