@using Microsoft.AspNetCore.Components.Authorization
@using Spendnt.WEB.Auth
@using System.Security.Claims

@inject NavigationManager NavigationManager
@inject ILoginService LoginService

<div class="nav-scrollable-permanent">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill me-2" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3 pt-2 pb-3 text-center user-profile-section">
                    <NavLink href="user-profile" class="d-block text-decoration-none">
                        @if (!string.IsNullOrEmpty(profilePictureUrlForNav))
                        {
                            <img src="@profilePictureUrlForNav" alt="Perfil"
                                 class="rounded-circle mb-2 shadow-sm"
                                 style="width: 60px; height: 60px; object-fit: cover;" />
                        }
                        else
                        {
                            <span class="bi bi-person-circle mb-2 d-block"
                                  style="font-size: 3rem; color: rgba(255,255,255,.75);"></span>
                        }
                        <div class="user-name"
                             style="color: rgba(255,255,255,.9); font-weight: 500; word-break: break-all;">
                            @context.User.FindFirstValue(ClaimTypes.GivenName)
                            @context.User.FindFirstValue(ClaimTypes.Surname)
                            (@context.User.Identity?.Name)
                        </div>
                        <div class="view-profile-link"
                             style="font-size: 0.8rem; color: rgba(255,255,255,.6);">
                            Ver Perfil <span class="bi bi-pencil-square ms-1"></span>
                        </div>
                    </NavLink>
                </div>
                <hr class="my-1 nav-separator-top" />

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="ingresos">
                        <span class="bi bi-arrow-up-circle-fill me-2" aria-hidden="true"></span> Ingresos
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="egresos">
                        <span class="bi bi-arrow-down-circle-fill me-2" aria-hidden="true"></span> Egresos
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="saldo">
                        <span class="bi bi-wallet2 me-2" aria-hidden="true"></span> Saldo
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="MetasAhorro">
                        <span class="bi bi-piggy-bank-fill me-2" aria-hidden="true"></span> Metas de Ahorro
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="calendario">
                        <span class="bi bi-calendar-event-fill me-2" aria-hidden="true"></span> Calendario
                    </NavLink>
                </div>

                <div class="mt-auto">
                    <hr class="my-2 nav-separator-bottom" />
                    <div class="nav-item px-3">
                        <button class="btn-logout-style" @onclick="HandleLogout">
                            <span class="bi bi-box-arrow-right me-2" aria-hidden="true"></span>
                            Cerrar Sesión
                        </button>
                    </div>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="login">
                        <span class="bi bi-box-arrow-in-right me-2" aria-hidden="true"></span> Iniciar Sesión
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="register">
                        <span class="bi bi-person-plus-fill me-2" aria-hidden="true"></span> Registrarse
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private string? profilePictureUrlForNav;

    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (AuthenticationStateTask != null)
        {
            var authState = await AuthenticationStateTask;
            UpdateUserProfilePicture(authState.User);

            if (LoginService is AuthenticationStateProvider authProvider)
                authProvider.AuthenticationStateChanged += HandleAuthenticationStateChanged;
        }
    }

    private void HandleAuthenticationStateChanged(Task<AuthenticationState> task)
    {
        InvokeAsync(async () =>
        {
            var authState = await task;
            UpdateUserProfilePicture(authState.User);
            StateHasChanged();
        });
    }

    private void UpdateUserProfilePicture(ClaimsPrincipal user)
    {
        if (user.Identity?.IsAuthenticated == true)
            profilePictureUrlForNav = user.Claims.FirstOrDefault(c => c.Type == "profile_picture")?.Value;
        else
            profilePictureUrlForNav = null;
    }

    private async Task HandleLogout()
    {
        await LoginService.LogoutAsync();
        NavigationManager.NavigateTo("/");
    }

    public void Dispose()
    {
        if (LoginService is AuthenticationStateProvider authProvider)
            authProvider.AuthenticationStateChanged -= HandleAuthenticationStateChanged;
    }
}
